scalar Time

type Account {
    id: String!
    name: String!
    orders: [order!]!
}

type Product {
    id: String!
    name: String!
    description: String!
    price: Float!
}

type Order {
    id: String!
    createdAt: Time!
    totalPrice: Float!
    products: [OrderedProduct!]!
}

type OrderedProduct {
    id: String!
    name: String!
    description: String!
    price: Float!
    quantity: Int!
}

input PaginationInput {
    skip: Int
    take: Int
}

input AccountInput {
    name: String!
}

input ProductInput {
    name: String!
    description: String!
    price: Float!
}

input OrderProductInput {
    id: String!
    quantity: Int!
}

input OrderedInput {
    accountId: String!
    products: [OrderProductInput!]!
}

type Mutation {
    createAccount(account: AccountInput!): Account
    createProduct(product: ProductInput!): Product
    createOrder(order: OrderedInput!): Order
}

type Query {
    
}